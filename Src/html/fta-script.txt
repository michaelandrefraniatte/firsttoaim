<!DOCTYPE html>
<html class="no-js" lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="file:///C:/Users/mic/Documents/GitHub/FTA/Src/html/foundation.min.css" />
    <link rel="stylesheet" href="file:///C:/Users/mic/Documents/GitHub/FTA/Src/html/tribute.css" />
    <style>

        * {
            box-sizing: border-box;
        }

        body {
            font: 16px Arial;
            margin: 20px;
        }

        input {
            border: 1px solid transparent;
            background-color: #f1f1f1;
            padding: 10px;
            font-size: 16px;
            width: 14%;
        }

            input[type=text] {
                background-color: #f1f1f1;
                width: 100%;
            }

            input[type=submit] {
                color: #fff;
                cursor: pointer;
            }
    </style>
    <style>

        .tribute-demo-input {
            outline: none;
            border: 1px solid #eee;
            padding: 3px 5px;
            border-radius: 2px;
            font-size: 15px;
            min-height: 32px;
            cursor: text;
        }

            .tribute-demo-input:focus {
                border-color: #d1d1d1;
                background-color: #fbfbfb;
            }

        [contenteditable="true"]:empty:before {
            content: attr(placeholder);
            display: block;
            color: #ccc;
        }

        #test-autocomplete-container {
            position: relative;
        }

        #test-autocomplete-textarea-container {
            position: relative;
        }

        .float-right {
            float: right;
        }
    </style>
    <style>


        .script {
            position: relative;
            top: 20px;
            left: 2.5%;
            width: 95%;
            height: 90%;
        }

        .statement {
            color: orange;
        }

        #test-autocomplete-textarea-container {
            width: 100%;
            height: 500px;
        }

        #test-autocomplete-textarea {
            width: 100%;
            height: 500px;
            padding: 10px;
            background-color: #444;
            color: white;
            font-size: 14px;
            font-family: monospace;
        }
    </style>
    <style>

        :root {
            --animation_speed: 600ms;
            --animation_delay: 200ms;
        }

        .jp-posts {
            position: absolute;
            overflow: hidden;
            background-image: linear-gradient(55deg, rgba(208, 208, 208, 0.03) 0%, rgba(208, 208, 208, 0.03) 20%, rgba(55, 55, 55, 0.03) 20%, rgba(55, 55, 55, 0.03) 40%, rgba(81, 81, 81, 0.03) 40%, rgba(81, 81, 81, 0.03) 60%, rgba(208, 208, 208, 0.03) 60%, rgba(208, 208, 208, 0.03) 80%, rgba(191, 191, 191, 0.03) 80%, rgba(191, 191, 191, 0.03) 100%), linear-gradient(257deg, rgba(72, 72, 72, 0.03) 0%, rgba(72, 72, 72, 0.03) 16.667%, rgba(138, 138, 138, 0.03) 16.667%, rgba(138, 138, 138, 0.03) 33.334%, rgba(54, 54, 54, 0.03) 33.334%, rgba(54, 54, 54, 0.03) 50.001%, rgba(161, 161, 161, 0.03) 50.001%, rgba(161, 161, 161, 0.03) 66.668%, rgba(17, 17, 17, 0.03) 66.668%, rgba(17, 17, 17, 0.03) 83.335%, rgba(230, 230, 230, 0.03) 83.335%, rgba(230, 230, 230, 0.03) 100.002%), linear-gradient(47deg, rgba(191, 191, 191, 0.01) 0%, rgba(191, 191, 191, 0.01) 16.667%, rgba(27, 27, 27, 0.01) 16.667%, rgba(27, 27, 27, 0.01) 33.334%, rgba(66, 66, 66, 0.01) 33.334%, rgba(66, 66, 66, 0.01) 50.001%, rgba(36, 36, 36, 0.01) 50.001%, rgba(36, 36, 36, 0.01) 66.668%, rgba(230, 230, 230, 0.01) 66.668%, rgba(230, 230, 230, 0.01) 83.335%, rgba(93, 93, 93, 0.01) 83.335%, rgba(93, 93, 93, 0.01) 100.002%), linear-gradient(90deg, #F3F3F3, #F3F3F3);
            padding: 4vw 0;
        }

        .jp-posts__wrap {
            position: absolute;
            transition: all var(--animation_speed) ease;
        }

        .jp-post {
            position: absolute;
            backface-visibility: hidden;
            z-index: 1;
            width: 100%;
            padding: 0 calc(4vw + 2em);
        }

            .jp-post.-current {
                transform: translateX(0);
                z-index: 2;
            }

                .jp-post.-current.-moveleft {
                    transform-origin: right center;
                    animation: leave var(--animation_speed);
                    opacity: 0;
                }

                .jp-post.-current.-moveright {
                    transform-origin: left center;
                    animation: leave var(--animation_speed);
                    opacity: 0;
                }

            .jp-post.-hidden {
                position: absolute;
                top: 0;
            }

                .jp-post.-hidden.-moving {
                    z-index: 3;
                }

                .jp-post.-hidden.-moveleft, .jp-post.-hidden.-moveright {
                    transform: translateX(0);
                }

            .jp-post.-next {
                transform: translateX(100vw);
            }

            .jp-post.-prev {
                transform: translateX(-100vw);
            }

            .jp-post.-moving {
                transition: all var(--animation_speed) cubic-bezier(0.165, 0.84, 0.44, 1) var(--animation_delay);
            }

                .jp-post.-moving.-current {
                    transition: transform var(--animation_speed) cubic-bezier(0.94, 0.01, 1, 1.02), opacity var(--animation_speed) cubic-bezier(0.94, 0.01, 1, 1.02);
                }

        @keyframes leave {
            0% {
                transform: scaleX(1);
                opacity: 1;
            }

            100% {
                transform: scaleX(2);
                opacity: 0;
            }
        }

        .jp-post__image {
            display: table;
            margin: auto;
        }

        .jp-posts__nav {
            width: 2em;
            height: 2em;
            border-radius: 50%;
            background-color: lightgray;
            color: white;
            position: fixed;
            display: flex;
            align-items: center;
            justify-content: center;
            top: 50%;
            transform: translateY(-50%);
            transition: all 300ms ease;
            z-index: 10;
        }

            .jp-posts__nav.-prev {
                left: 1vw;
                grid-area: prev;
            }

            .jp-posts__nav.-next {
                grid-area: next;
                right: 1vw;
            }

            .jp-posts__nav:hover {
                box-shadow: 0 0 0 0.3em white, 0 0 0 0.5em #adddff;
            }

                .jp-posts__nav:hover:focus {
                    box-shadow: 0 0 0 0.3em white, 0 0 0 0.5em #adddff;
                }

            .jp-posts__nav:focus {
                box-shadow: 0 0 0 0.2em #adddff;
                outline: none;
            }

        button {
            font-size: 15px;
        }
    </style>
</head>
<body>
    <div class="buttons">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Run Script" style="background-color: green;">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Test Script" style="background-color: black;">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Open Script" style="background-color: Blue;">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Save Script" style="background-color: DodgerBlue;">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Save Script As" style="background-color: DodgerBlue;">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Connect Controllers" style="background-color: purple;">
        <input type="submit" onclick='playSong("Phoenix1.wav")' value="Disonnect Controllers" style="background-color: red;">
    </div>

    <script>
        function playSong(song) {
        demoAbout(window.navigator.appVersion, song);
        }
    </script>

    <div class="script">
        <div>
            <h5>
                Enter your <code>script</code> here :
            </h5>
            <div id="test-autocomplete-textarea-container">
                <div contenteditable="true" id="test-autocomplete-textarea" placeholder="Codes..."></div>
            </div>
        </div>
    </div>

    <div class="slide">
        <div class="jp-posts">
            <button v-if="posts" class="jp-posts__nav -prev" onclick='prevPage("")'>
                <span class="hidden"><b><</b></span>
            </button>
            <button v-if="posts" class="jp-posts__nav -next" onclick='nextPage("")'>
                <span class="hidden"><b>></b></span>
            </button>
        </div>
    </div>

    <script>
        function prevPage(song) {
        demoAbout(window.navigator.appVersion, song);
        }
        function nextPage(song) {
        demoAbout(window.navigator.appVersion, song);
        }
    </script>

    <script src="file:///C:/Users/mic/Documents/GitHub/FTA/Src/html/tribute.js"></script>
    <script>

        // example of Tribute in autocomplete mode

        var tributeAttributes = {
        autocompleteMode: true,
        noMatchTemplate: "",
        values: [
        { key: "SendA", value: "SendA" },
        { key: "SendB", value: "SendB" },
        { key: "SendC", value: "SendC" },
        { key: "SendD", value: "SendD" },
        { key: "SendE", value: "SendE" },
        { key: "SendF", value: "SendF" },
        { key: "SendG", value: "SendG" },
        { key: "SendH", value: "SendH" },
        { key: "SendI", value: "SendI" },
        { key: "SendJ", value: "SendJ" },
        { key: "SendK", value: "SendK" },
        { key: "SendL", value: "SendL" },
        { key: "SendM", value: "SendM" },
        { key: "SendN", value: "SendN" },
        { key: "SendO", value: "SendO" },
        { key: "SendP", value: "SendP" },
        { key: "SendQ", value: "SendQ" },
        { key: "SendR", value: "SendR" },
        { key: "SendS", value: "SendS" },
        { key: "SendT", value: "SendT" },
        { key: "SendU", value: "SendU" },
        { key: "SendV", value: "SendV" },
        { key: "SendW", value: "SendW" },
        { key: "SendX", value: "SendX" },
        { key: "SendY", value: "SendY" },
        { key: "SendZ", value: "SendZ" }
        ],
        selectTemplate: function(item) {
        if (typeof item === "undefined") return null;
        if (this.range.isContentEditable(this.current.element)) {
        return item.original.key;
        }
        return item.original.value;
        },
        menuItemTemplate: function(item) {
        return item.string;
        }
        };
        var tributeAutocompleteTest = new Tribute(
        Object.assign(
        {
        menuContainer: document.getElementById(
        "test-autocomplete-container"
        )
        },
        tributeAttributes
        )
        );

        var tributeAutocompleteTestArea = new Tribute(
        Object.assign(
        {
        menuContainer: document.getElementById(
        "test-autocomplete-textarea-container"
        )
        },
        tributeAttributes
        )
        );
        tributeAutocompleteTestArea.attach(
        document.getElementById("test-autocomplete-textarea")
        );
    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

    <script>
        var el = document.getElementById("test-autocomplete-textarea");
        var keywords = ["SELECT","FROM","WHERE","LIKE","BETWEEN","NOT LIKE","FALSE","NULL","FROM","TRUE","NOT IN"];
        $("#test-autocomplete-textarea").on("keyup", function(e){
            if (e.key == "Enter") {
                var newHTML = $("#test-autocomplete-textarea").text();
                newHTML = newHTML.replace(/;/gi, ";<br>");
                keywords.forEach(function(val){
                    newHTML = newHTML.replace(val, '<font color="orange">' + val + '</font>');
                });
        		el.innerHTML = newHTML;
            }
        });
    </script>
</body>
</html>
